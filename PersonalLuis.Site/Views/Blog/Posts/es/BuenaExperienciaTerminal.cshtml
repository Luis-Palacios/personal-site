<div class="single-post-content">
    <p>
        Microsoft Build 2019 termino hace poco y se hicieron muchos anuncios emocionantes entre uno de ellos esta la nueva Terminal de Windows las cual es descrita como:
        <blockquote>una nueva, moderna, rapida, eficiente, poderosa, y productiva aplicacion de terminal para usuarios de herramientas de linea de comando y shells como Command Prompt, PowerShell, y WSL.</blockquote>
    </p>
    <p>
        Incluso crearon un video que es todo un esfuerzo de mercadeo y tengo que admitirlo se ve bastante bien.
    </p>
    <div class="embed-responsive embed-responsive-16by9">
        <iframe class="embed-responsive-item" src="https://www.youtube.com/embed/8gw0rXPMMPE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    </div>
    <br />
    <p>
        Puedes ver la presentation en Microsoft Build(en ingles) aqui: <a target="_blank" href="https://mybuild.techcommunity.microsoft.com/sessions/77004">Windows Terminal: Building a better command line experience for developers</a>
        y puedes ver mas detalles en este post(tambien en ingles): <a href="https://devblogs.microsoft.com/commandline/introducing-windows-terminal/" target="_blank">Introducing Windows Terminal</a>
    </p>
    <h2>¿Muy poco, muy tarde?</h2>
    <p>
        No hay duda acerca de que es muy tarde porque no hemos tenido una terminal decente integrada en windows, todo lo que hemos tenido es el command prompt el cual
        ya tiene alrededo de 30 años de antiguedad y aunque cumple con su funcion, no es una herramienta donde quieres pasar tu tiempo.
        El equipo trabajando en ella ha agregado algunas mejorar basicas pero aun le falta mucho en comparacion a otras terminales
        especialmente las que estan disponibles para los sistemas basados en UNIX y ciertamente no podemos personalizarla tanto a como es posible en UNIX y si
        has usado algo como <a href="https://ohmyz.sh/" target="_blank">oh my zsh</a> sabes que el cmd de windows esta lejos de eso. Pero esta nueva terminal ira a ser muy poco?
        Solo estaremos seguro cuando hagan el lanzamiento oficial alrededor de Junio.
    </p>
    <p>
        Tambiens tenes Powershell como opcion y aunque es la favorita de muchos administradores de sistema de Windows para los desarrolladores no ha sido la gran cosa.
        ¿Por que sera que este no habia sido una prioridad para Microsoft? bueno no puedo decirlo con certeza pero
        en el pasado los desarrolladores de .Net han estado usando principalmente un <a href="https://en.wikipedia.org/wiki/Integrated_development_environment">IDE</a>(Visual Studio)
        para el desarrollo y normalmente tienes todo lo que necesitas ahi.
    </p>
    <h2>
        ¿Necesitamos una buena aplicacion de consola en Windows?
    </h2>
    <p>
        Con tantas herramientas populares que existen hoy en dia que normalmente requieren una <a href="https://www.w3schools.com/whatis/whatis_cli.asp">CLI</a>
        para trabajar, la necesita de una buena consola se ha vuelto clara incluso .Net Core se ha movido a usar mas y mas funciones en la linea de comandos y
        aunque podrias integrar todo esto en Visual Studio para que los scripts se ejecuten automaticamente cuando compilas o corres la Solucion desde Visual Studio,
        la verdad es que muchas personas estan dejando la experiencia de usas estos grandes IDE y estan comenzando a usar mas los editores de texto livianos tales como Visual Studio Code
        y comandos en la terminal y si estan desarrollando en otros lenguajes tales como python, javascript o ruby no puedes escapar de la necesidad de una mejor consola.
    </p>
    <p>
        Ese fue mi caso cuando comenze a desarrollar en Django, viniendo de un transfondo de principalmente desarrollo en .Net opte por quedarme en Windows para
        hacer desarrollo en Django. Todo iba bien excepto por cmd, estaba haciendo mis pip installs, creando ambientes virtuales, generando y corriendo migraciones e incluso corriendo
        la aplicacion desde la consola y cmd no era lo suficientemene buena. Entonces decidi que tenia que encontrar una consola decente para Windows que me proveyera de una mejor experiencia.
    </p>

    <h2>Aplicaciones de consola disponibles para Windows</h2>
    <p>
        Si haces una busqueda en google para alternativas en Windows vas a encontrar muchas opciones disponibles y una que probablemente ya tenes si
        sos desarrollador de software es <a href="https://www.atlassian.com/git/tutorials/git-bash" target="_blank">git bash</a> la cual normalmente es incluida
        en <a href="https://gitforwindows.org/" target="_blank">Instalador de Git para windows</a> y sin dudas es una mejora muy buena te permite ejecutar comandos
        estilo Unix y tambien provee comandos como ssh, scp, cat, etc. Y adicionalmente tiene un excelente auto-completado para los comandos de git, sin embargo
        le faltan algunas cosas.
        <ol class="post-list">
            <li>
                1. Pestañas y Vistas divididas.
            </li>
            <li>
                2. Mejor soporte para atajos de teclado.
            </li>
            <li>
                3. Mejores opciones para personalizar la consola.
            </li>
        </ol>
    </p>
    <p>
        Entonces que opciones tenemos? de hecho, muchas ya que muchas personas sintieron la necesidad de una mejor aplicacion de consola en Windows, solo para mencionar
        algunas tomado de <a href="https://www.slant.co/topics/1552/~best-terminal-emulators-for-windows">Slant.co</a>
        <div class="thumb-wrap">
            <img data-lazy="/images/posts/cmder/ranking.png" src="/images/blur.png" class="img-thumbnail" alt="cmder-must-have-windows-console">
        </div>
        Puedes leer las reseñas en el enlace a Slant si queres saber mas acerca de cada opcion.
    </p>
    <h2>
        Mi eleccion
    </h2>
    <p>
        Yo estoy de acuerdo con los resultados en Slant ya que desde hace tiempo mi eleccion fue <a href="https://cmder.net/">cmder</a> -- pronunciado “Commander” en ingles
        provee exactamente lo que queria. Me gusta bastante los estilos por defecto y si a ti no puede personalizarlos, tambien provee Vistas divididas, pestañas y excelentes atajos de teclado
    </p>
    <h3>Pestañas y and Vistas divida</h3>
    <div class="thumb-wrap">
        <picture>
            <source data-srcset="/images/posts/cmder/main.webp" type="image/webp" />
            <source data-srcset="/images/posts/cmder/main.png" type="image/png" />
            <img src="/images/posts/cmder/main.png" class="img-thumbnail" alt="cmder-must-have-windows-console">
        </picture>
    </div>
    <h3>Excelentes atajos de teclado</h3>
    <div class="thumb-wrap">
        <img data-lazy="/images/posts/cmder/keyboard-shorctus.png" src="/images/blur.png" class="img-thumbnail" alt="cmder-keyboart-shortcuts">
    </div>
    <h3>Altamente personalizable</h3>
    <div class="thumb-wrap">
        <picture>
            <source srcset="/images/posts/cmder/settings.webp" type="image/webp" />
            <source srcset="/images/posts/cmder/settings.png" type="image/png" />
            <img src="/images/posts/cmder/settings.png" class="img-thumbnail" alt="cmder-settings">
        </picture>
    </div>
    <p>
        Puedes leer mas acerca de cmder aqui <a href="https://github.com/cmderdev/cmder/wiki">Wiki</a> y aqui
        <a href="https://github.com/cmderdev/cmder/blob/master/README.md">About cmder</a> pero Yo te voy a dar un
        resumen de las caracteristicas que mas ocupo personalmente
    </p>
    <h3>Commandos Estilo Unix</h3>
    Estos de hecho son un regalo de git para windows y no de cmder sin embargo cmder puede tomar ventaja de ellos y usarlos,
    y en caso que seas nuevo al mundo de las consolas en Windows quiero que estes al tanto de las bondades disponibles
    <ul class="post-list">
        <li>
            <strong>ls</strong> para listar todos las carpetas y archivos en el directory actual y lo puedes usar con toda su <a href="https://www.techonthenet.com/unix/basic/ls.php">variedad de flags</a> disponibles
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/ls.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder/ls.png" type="image/png" />
                    <img data-src="/images/posts/cmder/ls.png" src="/images/blur.png" class="img-thumbnail" alt="cmder-ls">
                </picture>
            </div>
        </li>
        <li>
            <strong>touch</strong> ¿alguna ves has intentando crear un archivo en Windows llamado <code>.someName</code>? puede ser problematico pero puedes usar touch para rapidamente crear archivos vacios.
            y actualizar la fecha de modificacion en archivos existentes ej: <code>touch .editorconfig </code>
        </li>
        <li>
            <strong>cat</strong> para concatenar y rapidamente poder ver el contenido de un archivo en la consola.
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cat.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder/cat.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cat.png" src="/images/blur.png" class="img-thumbnail" alt="cmder-cat">
                </picture>
            </div>
        </li>
        <li>
            <strong>rm</strong> para borrar archivos y carpetas usalo con <code>-r</code> para borrar recursivamente subcarpetas y <code>-f</code>
            para forcar el borrado. Mi uso mas tipico de este comando es 
            <code>rm -rf node_modules</code> &#128517;
        </li>
        <li>
            <strong>ssh</strong>, <strong>ssh-keygen</strong> y <strong>ssh-add</strong> para accesar a servidores remotos, la falta de poder usar ssh tal como se puede en Linux
            es probablemente la mayor razon por la cual he maldecido Windows, haber tenido que lidiar con <a href="https://www.putty.org/">PuTTY</a> y sus utilidades
            fue una pesadilla para mi en comparacion a usar ssh en Linux, y para mi sorpresa muchas personas aun creen que PuTTY es la unica manera de usar ssh
            en Windows, pero de hecho tenemos dos maneras de usar ssh ahora just como en Linux, one que viene junto con git para windows y un cliente de open ssh que viene
            ahora por defecto en Windows 10 asi que Putty no es tu unica opcion si necesitas usar ssh. Si quieres verificar cuales tenes disponibles para ti puedes usar los comandos <code>where</code>
            y <code>which</code>
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/ssh.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder/ssh.png" type="image/png" />
                    <img data-src="/images/posts/cmder/ssh.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-ssh">
                </picture>
            </div>
            Como puedes ver yo tengo ambas opciones disponibles pero estoy utilizando open ssh que viene por defecto en Windows 10.
        </li>
    </ul>
    <h3>Atajos de teclado</h3>
    <ul class="post-list">
        <li>
            <strong>Ctrl + t</strong> probablemente estes familiarizado con este atajo ya que es el mismo que se utiliza para abrir una nueva pestaña en los navegadores y en cmder hace exctamente lo mismo
            asi que es facil acostumbrarse a el.
        </li>
        <li>
            <strong>Ctrl + w</strong> cierra la pestaña actual.
        </li>
        <li>
            <strong>Alt + Enter</strong> Pantalla completa.
        </li>
        <li>
            <strong>Ctrl + Alt + u</strong> Lo mismo que ejecutar <code>cd ..</code> en la consola te permite rapidamente subir un nivel en la estructura de directorios.
        </li>
        <li>
            <strong>Ctrl + r</strong> ¿Alguna ves has usado un comando con muchos parametros que es dificil de recordar y no lo guardastes? este atajo me ha salvado
            varias veces ya que te permite hacer una busqueda de los comandos ejecutados.
            <div class="thumb-wrap sub-image-wrap">
                <img data-lazy="/images/posts/cmder/search.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-search">
            </div>
        </li>
    </ul>
    <h3>Copy & Paste</h3>
    <ul class="post-list">
        <li>
            <strong>Copiar</strong> solo selecciona el texto que te gustaria copiar
        </li>
        <li>
            <strong>Pegar</strong> simplemente usa click derecho para pegar el texto o usa <code>Ctrl + shift + v</code>
        </li>
    </ul>
    <h3>Git</h3>
    <ul class="post-list">
        <li>
            <strong>Git auto completado</strong> solamente escribe algo como <code>git co</code> y presiona tab y se va a
            auto completar <code>git commit</code> incluso puede sugerir comandos disponibles cuando hay mas de una posibilidad de auto completado
            prueba algo como <code>git che</code> y presiona tab dos veces
            <div class="thumb-wrap sub-image-wrap">
                <img data-lazy="/images/posts/cmder/gitchec.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-git-autocomplete">
            </div>
        </li>
        <li>
            <strong>Informacion de Git disponible en la consola</strong>
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/git.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder/git.png" type="image/png" />
                    <img data-src="/images/posts/cmder/git.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-git">
                </picture>
            </div>
        </li>
    </ul>
    <h3>Alias</h3>
    Esta problemente es la caracteristica que mas me gusta porque ha incrementado mi productividad y es muy simple de usar.
    Los siguientes son una lista de unos cuantos comandos que use casi diario.
    <ul class="post-list">
        <li>
            <strong>python manage.py runserver</strong>
        </li>
        <li>
            <strong>python manage.py makemigrations</strong>
        </li>
        <li>
            <strong>python manage.py migrate</strong>
        </li>
        <li>
            <strong>dotnet run</strong>
        </li>
        <li>
            <strong>cd source/repos/somerepo</strong>
        </li>
        <li>
            <strong>rm -rf node_module && npm install</strong>
        </li>
        <li>
            <strong>git fetch && git checkout somebranch</strong>
        </li>
        <li>
            <strong>git commit -m "my commit comment"</strong>
        </li>
    </ul>
    <p>
        Puedes ver que algunos de ellos son un poco largo, con Alias puedo crear atajos para todos ellos y es tan simple como <code>alias djrun=python manage.py runserver</code>
        donde djrun es el alias que quiero usar, para mi dj de django y run de correr el servidor asi que ahora puedo simplemente escribir <code>djrun</code>
        lo cual es mas corto que <code>python manage.py runserver</code> e incluso te funciona el auto completado para tus alias tambien!.
    </p>
    <div class="thumb-wrap">
        <picture class="lazy">
            <source data-srcset="/images/posts/cmder/djrun.webp" type="image/webp" />
            <source data-srcset="/images/posts/cmder/djrun.png" type="image/png" />
            <img data-src="/images/posts/cmder/djrun.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-alias-django-run">
        </picture>
    </div>
    <p>
        Puedo hacer algo similar para mis otros comando, uno que encuentro muy util es crear un alias para acceder a mis repositorios
        ej: <code>alias gotopesite=cd C:\Users\LuisPalacios\source\repos\personal-site</code> de esta manera sin importar donde este en mi
        estructura de directorio puedo simplemente escribir <code>gotopesite</code> presionar enter en inmediatamente estare en mi repositorio.
    </p>
    <div class="thumb-wrap">
        <picture class="lazy">
            <source data-srcset="/images/posts/cmder/goto.webp" type="image/webp" />
            <source data-srcset="/images/posts/cmder/goto.png" type="image/png" />
            <img data-src="/images/posts/cmder/goto.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-alias-navigation">
        </picture>
    </div>
    <p>
        ¿Que tal cuando necesitas un alias que requiere soporte para argumentos? tal como<code>git commit -m "esto deberia ser un argumento"</code>
        puedes facilmente lograr esto usando <code>$*</code> donde quieres que tu alias ponga el argumento que recive asi que en mi caso
        seria algo como esto <code>alias gtcommit=git commit -m "$*"</code> y asi lo puedo usar de esta forma <code>gtcommit this my example comment</code>
    </p>
    <div class="thumb-wrap">
        <picture class="lazy">
            <source data-srcset="/images/posts/cmder/gtcommit.webp" type="image/webp" />
            <source data-srcset="/images/posts/cmder/gtcommit.png" type="image/png" />
            <img data-src="/images/posts/cmder/gtcommit.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-git-commit">
        </picture>
    </div>
    <p>
        Hay mucho mas que pudes hacer con alias y puedes encontrar mas detalles en la documentacion oficial en los enlaces que comparti antes, pero espero
        esto sea suficienta para que comiences a definir tus propios alias.
    </p>
    <h3>Tareas de arranque</h3>
    <p>
        Estas tambien ayudan mucho a ser mas productivo porque puedes crear tus propias taras de arranque, miremos como ejemplo lo que normalmente tengo que hacer
        cuando trabajo en mi sitio personal el cual esta en .Net Core pero tambien usar herramientas en Nodejs para compilar el front-end tales como Webpack.
    </p>
    <ol class="post-list">
        <li>
            1. Una pestaña de linea de comando para mis comandos git
        </li>
        <li>
            2. Una pestaña de linea de comando correr mi aplicacion<code>dotnet run</code>
        </li>
        <li>
            3. Una pestaña de linea de comando para vigilar y compilar los cambios en mis archivos de front-end <code>npm run watch</code>
        </li>
    </ol>
    <p>
        Sin mencionar que tambien en cada una necesito navegar al directorio donde esta mi respositorio para poder ejecutar estos comandos. Entonces los pasos manuales que tendria
        que hacer cada ves que quiero trabajar en mi repositorio se ven algo asi:
    </p>
    <ol class="post-list">
        <li>
            1. Abrir cmder y navegar al directorio donde esta mi repositorio
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/open-cmder.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder/open-cmder.png" type="image/png" />
                    <img data-src="/images/posts/cmder/open-cmder.png" class="img-thumbnail" src="/images/blur.png" alt="open-cmder">
                </picture>
            </div>
        </li>
        <li>
            2. Abrir una nueva pestaña divida a la derecha, navegar a mi repositorio y correr <code>dotnet run</code>
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-open-tab-right.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder/cmder-open-tab-right.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-open-tab-right.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-open-tab-right">
                </picture>
            </div>
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-run-dotnerun.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder/cmder-run-dotnerun.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-run-dotnerun.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-run-dotnerun">
                </picture>
            </div>
        </li>
        <li>
            3. Abrir una nueva pestaña divida a abajo, navegar a mi repositorio y correr <code>npm run watch</code>
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-open-tab-bottom.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder/cmder-open-tab-bottom.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-open-tab-right.bottom" class="img-thumbnail" src="/images/blur.png" alt="cmder-open-tab-bottom">
                </picture>
            </div>
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-run-npmwatch.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder/cmder-run-npmwatch.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-run-npmwatch.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-run-npmwatch">
                </picture>
            </div>
        </li>
    </ol>
    <p>
        Esto es bastante trabajo repetitivo, aun usando alias es bastante molesto, cmder tiene una opcion tal como los navegadores de internet que pueden guardar y re-abrir todas
        las pestañas que tenias cada ves que cierras y abres cmder.
    </p>
    <div class="thumb-wrap">
        <picture class="lazy">
            <source data-srcset="/images/posts/cmder/cmder-autorestore-tab.webp" type="image/webp" />
            <source data-srcset="/images/posts/cmder/cmder-autorestore-tab.png" type="image/png" />
            <img data-src="/images/posts/cmder/cmder-autorestore-tab.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-autorestore-tab">
        </picture>
    </div>
    <p>
        Eso podria ser suficiente si te toca trabajar solamente en un repositorio, pero si eres como yo y necesitas trabajar en multiples repositorios en el dia, esto no es lo suficientemente bueno
        porque si intentas mantener todas las pestañas para todos los repositorios que necesitas, la navegacion atravez de las pestañas se vuelve mas dificil sin mencionar el hecho que vas a
        desperdiciar RAM.
    </p>
    <p>
        Asi que seria genial si le pudiera decir a cmder <strong>"Abre todo lo que necesito para trabajar en mi sitio personal"</strong>
        Y puedo hacer exactamente eso atra vez de las Tareas de arranque, Voy a definir mi propia Tarea de arranque para trabajar en mi sitio personal.
    </p>
    <ol class="post-list">
        <li>
            1. Abre cmder y ve a la configuracion <code>Win + alt + p</code> despues ve a Startup -> Tasks y da click en el boton <strong>"+"</strong>.
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-add-newtask.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmdercmder-add-newtask.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-add-newtask.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-add-newtask">
                </picture>
            </div>
        </li>
        <li>
            2. Ahora necesito decirle a cmder exactamente que quiero que haga mi tarea, hay mucho que se puede hacer aqui y pudes aprender mas al respecto aqui<a href="https://conemu.github.io/en/Tasks.html">ConEmu’s Tasks</a>
            sin embargo esto puede resultar abrumador si eres nuevo en este mundo de emuladores de consola, cmder tiene una maravillosa funcion que te permite decirle "Guarda todoas mis pestañas activas como una nueva tarea"
            asi que lo unico que tengo que hacer es definir el nombre de mi tarea y dar click en el boton <strong>Active tabs</strong>.
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-add-newtask-name.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder-add-newtask-name.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-add-newtask-name.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-add-newtask-name">
                </picture>
            </div>
        </li>
        <li>
            3. Esto va a crear una tarea que va a abrir todas las pestañas que necesito con la vista divida que defini antes y en los directorios donde las necesito, sin embargo, no va a ejecutar ningun comando
            cuando inicie pero agregar eso es bastante sencillo simplemente agrego al final de cada comando <code>&& mycommand</code> y tambien necesito definirel campo de "task parameter"
            que en mi caso simplemente lo copio y pego de la tarea <strong>cmd::Cmder</strong> Recuerda dar click en el boton "Save Settings".
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-add-newtask-config.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder-add-newtask-config.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-add-newtask-config.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-add-newtask-config">
                </picture>
            </div>
        </li>
        <li>
            4. Ahora cada vez que quiera abrir cmder puedo usar <code>ctrl + t</code> para abrir una nueva pestaña y veras que mi nueva tarea aparece en el listado y si
            la selecciono, deberia abrir todas las pestañas y ejecutar los comandos que quiero para poder trabajar en mi repositorio.
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-start-newtask.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder-start-newtask.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-start-newtask.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-start-newtask">
                </picture>
            </div>
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-ready-togo.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder-ready-togo.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-ready-togo.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-ready-togo">
                </picture>
            </div>
        </li>
    </ol>
    <p>
        Esa es una mejora significativa sin embargo, podemos dar un paso mas, De hecho puedo anclar my tarea a la barra de tareas de Windows. Yo ya tengo anclada mi aplicacion de cmder
        en mi barra de tareas pero le doy click derecho todo lo que veo es la opcion de abrir cmder o desanclar de la barra de tareas.
    </p>
    <div class="thumb-wrap">
        <picture class="lazy">
            <source data-srcset="/images/posts/cmder/cmder-taskbar-default.webp" type="image/webp" />
            <source data-srcset="/images/posts/cmder-taskbar-default.png" type="image/png" />
            <img data-src="/images/posts/cmder/cmder-taskbar-default.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-taskbar-defaulto">
        </picture>
    </div>
    <p> Para poder agregar mi nueva tarea a la barra de tareas necesito seguir los siguientes pasos.</p>
    <ol>
        <li>
            1. Abrir la configuracion y selecionar mi tarea y asegurarme que el checkbox <strong>Taskbar Jump list</strong> este activa, tambien
            puedes ver atra ves de la lista de tareas y remover el check de las tares que no quisieras que aparezcan.
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-add-newtask-taskbar.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder-add-newtask-taskbar.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-add-newtask-taskbar.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-add-newtask-taskbar">
                </picture>
            </div>
        </li>
        <li>
            2. Ahora en la configuracion ve a General -> Taskbar y asegurate que los checkboxs <strong>Add ComEmu Task</strong> y <strong>AutoUpdate</strong> esten 
            activos y despues da click en el boton <strong>Update now</strong> y despues en <strong>Save Settings</strong>
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-taskbar-update.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder-taskbar-update.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-taskbar-update.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-taskbar-update">
                </picture>
            </div>
        </li>
        <li>
            3. Ahora para el ultimo paso, ejecuta el comando <code>ConEmu.exe /updatejumplist</code> en cmder.
            <div class="thumb-wrap sub-image-wrap">
                <picture class="lazy">
                    <source data-srcset="/images/posts/cmder/cmder-taskbar-complete.webp" type="image/webp" />
                    <source data-srcset="/images/posts/cmder-taskbar-complete.png" type="image/png" />
                    <img data-src="/images/posts/cmder/cmder-taskbar-complete.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-taskbar-complete">
                </picture>
            </div>
        </li>
    </ol>
    <p> Con esto, estoy listo para abrir todo lo que necesito en mi linea de comando para trabajar en mi repositorio con solamente un click derecho y un click.</p>
    <div class="thumb-wrap">
        <picture class="lazy">
            <source data-srcset="/images/posts/cmder/cmder-taskbar-ready.webp" type="image/webp" />
            <source data-srcset="/images/posts/cmder-taskbar-ready.png" type="image/png" />
            <img data-src="/images/posts/cmder/cmder-taskbar-ready.png" class="img-thumbnail" src="/images/blur.png" alt="cmder-taskbar-ready">
        </picture>
    </div>

    <h3>¿Hay alguna desventaja?</h3>
    <p>
        cmder justo como muchas otras opciones para una mejor consola en Windows es un emulador esto significa que el rendimiento
        podria verse afectado, en versiones mas antiguas yo si note que el tiempo de arranque era mas lento que iniciar cmd o PowerShell 
        pero tambien tenia un hardware mas antiguo, ahora que tengo un hardware mejor(i7 and SSD) No noto ningun problemas de rendimiento.
    </p>
    <p>
        ¿Que piensas? ¿Estas emocionado por la nueva terminal de Windows? ¿Crees que cmder es una excelente opcion mientras esperamos por ella?
        Puedes compartir el la seccion de comentarios abajo.
    </p>
</div>
